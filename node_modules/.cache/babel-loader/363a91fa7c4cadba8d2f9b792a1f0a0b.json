{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.calculatePosition = calculatePosition;\n\nvar _updateTrace = require(\"./updateTrace\");\n\nvar _resolveDirection = require(\"./resolveDirection\");\n\nvar _calculateDuration = require(\"./calculateDuration\");\n\nvar _calculateVelocity = require(\"./calculateVelocity\");\n\nvar _types = require(\"../types\");\n\nfunction calculatePosition(state, options) {\n  var start = state.start,\n      x = state.x,\n      y = state.y,\n      traceX = state.traceX,\n      traceY = state.traceY;\n  var rotatePosition = options.rotatePosition,\n      directionDelta = options.directionDelta;\n  var deltaX = rotatePosition.x - x;\n  var deltaY = y - rotatePosition.y;\n  var absX = Math.abs(deltaX);\n  var absY = Math.abs(deltaY);\n  (0, _updateTrace.updateTrace)(traceX, deltaX);\n  (0, _updateTrace.updateTrace)(traceY, deltaY);\n  var directionX = (0, _resolveDirection.resolveDirection)(traceX, _types.Axis.X, directionDelta);\n  var directionY = (0, _resolveDirection.resolveDirection)(traceY, _types.Axis.Y, directionDelta);\n  var duration = (0, _calculateDuration.calculateDuration)(start, Date.now());\n  var velocity = (0, _calculateVelocity.calculateVelocity)(absX, absY, duration);\n  return {\n    absX: absX,\n    absY: absY,\n    deltaX: deltaX,\n    deltaY: deltaY,\n    directionX: directionX,\n    directionY: directionY,\n    duration: duration,\n    positionX: rotatePosition.x,\n    positionY: rotatePosition.y,\n    velocity: velocity\n  };\n}","map":{"version":3,"sources":["/Users/lamnguyen/Documents/HCMUS/Web advance/final project/template/banking/node_modules/vanilla-swipe/lib/utils/calculatePosition.js"],"names":["Object","defineProperty","exports","value","calculatePosition","_updateTrace","require","_resolveDirection","_calculateDuration","_calculateVelocity","_types","state","options","start","x","y","traceX","traceY","rotatePosition","directionDelta","deltaX","deltaY","absX","Math","abs","absY","updateTrace","directionX","resolveDirection","Axis","X","directionY","Y","duration","calculateDuration","Date","now","velocity","calculateVelocity","positionX","positionY"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,iBAAR,GAA4BA,iBAA5B;;AAEA,IAAIC,YAAY,GAAGC,OAAO,CAAC,eAAD,CAA1B;;AAEA,IAAIC,iBAAiB,GAAGD,OAAO,CAAC,oBAAD,CAA/B;;AAEA,IAAIE,kBAAkB,GAAGF,OAAO,CAAC,qBAAD,CAAhC;;AAEA,IAAIG,kBAAkB,GAAGH,OAAO,CAAC,qBAAD,CAAhC;;AAEA,IAAII,MAAM,GAAGJ,OAAO,CAAC,UAAD,CAApB;;AAEA,SAASF,iBAAT,CAA2BO,KAA3B,EAAkCC,OAAlC,EAA2C;AACzC,MAAIC,KAAK,GAAGF,KAAK,CAACE,KAAlB;AAAA,MACIC,CAAC,GAAGH,KAAK,CAACG,CADd;AAAA,MAEIC,CAAC,GAAGJ,KAAK,CAACI,CAFd;AAAA,MAGIC,MAAM,GAAGL,KAAK,CAACK,MAHnB;AAAA,MAIIC,MAAM,GAAGN,KAAK,CAACM,MAJnB;AAKA,MAAIC,cAAc,GAAGN,OAAO,CAACM,cAA7B;AAAA,MACIC,cAAc,GAAGP,OAAO,CAACO,cAD7B;AAEA,MAAIC,MAAM,GAAGF,cAAc,CAACJ,CAAf,GAAmBA,CAAhC;AACA,MAAIO,MAAM,GAAGN,CAAC,GAAGG,cAAc,CAACH,CAAhC;AACA,MAAIO,IAAI,GAAGC,IAAI,CAACC,GAAL,CAASJ,MAAT,CAAX;AACA,MAAIK,IAAI,GAAGF,IAAI,CAACC,GAAL,CAASH,MAAT,CAAX;AACA,GAAC,GAAGhB,YAAY,CAACqB,WAAjB,EAA8BV,MAA9B,EAAsCI,MAAtC;AACA,GAAC,GAAGf,YAAY,CAACqB,WAAjB,EAA8BT,MAA9B,EAAsCI,MAAtC;AACA,MAAIM,UAAU,GAAG,CAAC,GAAGpB,iBAAiB,CAACqB,gBAAtB,EAAwCZ,MAAxC,EAAgDN,MAAM,CAACmB,IAAP,CAAYC,CAA5D,EAA+DX,cAA/D,CAAjB;AACA,MAAIY,UAAU,GAAG,CAAC,GAAGxB,iBAAiB,CAACqB,gBAAtB,EAAwCX,MAAxC,EAAgDP,MAAM,CAACmB,IAAP,CAAYG,CAA5D,EAA+Db,cAA/D,CAAjB;AACA,MAAIc,QAAQ,GAAG,CAAC,GAAGzB,kBAAkB,CAAC0B,iBAAvB,EAA0CrB,KAA1C,EAAiDsB,IAAI,CAACC,GAAL,EAAjD,CAAf;AACA,MAAIC,QAAQ,GAAG,CAAC,GAAG5B,kBAAkB,CAAC6B,iBAAvB,EAA0ChB,IAA1C,EAAgDG,IAAhD,EAAsDQ,QAAtD,CAAf;AACA,SAAO;AACLX,IAAAA,IAAI,EAAEA,IADD;AAELG,IAAAA,IAAI,EAAEA,IAFD;AAGLL,IAAAA,MAAM,EAAEA,MAHH;AAILC,IAAAA,MAAM,EAAEA,MAJH;AAKLM,IAAAA,UAAU,EAAEA,UALP;AAMLI,IAAAA,UAAU,EAAEA,UANP;AAOLE,IAAAA,QAAQ,EAAEA,QAPL;AAQLM,IAAAA,SAAS,EAAErB,cAAc,CAACJ,CARrB;AASL0B,IAAAA,SAAS,EAAEtB,cAAc,CAACH,CATrB;AAULsB,IAAAA,QAAQ,EAAEA;AAVL,GAAP;AAYD","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.calculatePosition = calculatePosition;\n\nvar _updateTrace = require(\"./updateTrace\");\n\nvar _resolveDirection = require(\"./resolveDirection\");\n\nvar _calculateDuration = require(\"./calculateDuration\");\n\nvar _calculateVelocity = require(\"./calculateVelocity\");\n\nvar _types = require(\"../types\");\n\nfunction calculatePosition(state, options) {\n  var start = state.start,\n      x = state.x,\n      y = state.y,\n      traceX = state.traceX,\n      traceY = state.traceY;\n  var rotatePosition = options.rotatePosition,\n      directionDelta = options.directionDelta;\n  var deltaX = rotatePosition.x - x;\n  var deltaY = y - rotatePosition.y;\n  var absX = Math.abs(deltaX);\n  var absY = Math.abs(deltaY);\n  (0, _updateTrace.updateTrace)(traceX, deltaX);\n  (0, _updateTrace.updateTrace)(traceY, deltaY);\n  var directionX = (0, _resolveDirection.resolveDirection)(traceX, _types.Axis.X, directionDelta);\n  var directionY = (0, _resolveDirection.resolveDirection)(traceY, _types.Axis.Y, directionDelta);\n  var duration = (0, _calculateDuration.calculateDuration)(start, Date.now());\n  var velocity = (0, _calculateVelocity.calculateVelocity)(absX, absY, duration);\n  return {\n    absX: absX,\n    absY: absY,\n    deltaX: deltaX,\n    deltaY: deltaY,\n    directionX: directionX,\n    directionY: directionY,\n    duration: duration,\n    positionX: rotatePosition.x,\n    positionY: rotatePosition.y,\n    velocity: velocity\n  };\n}"]},"metadata":{},"sourceType":"script"}