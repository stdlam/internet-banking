{"ast":null,"code":"var _jsxFileName = \"/Users/lamnguyen/Documents/HCMUS/Web advance/final project/template/banking/src/components/Switch/index.js\",\n    _s = $RefreshSig$();\n\nimport { ErrorMessage } from \"../../components/ErrorMessage\";\nimport React from \"react\";\nimport SwitchProvider from \"@dhiwise/react-switch\";\nimport PropTypes from \"prop-types\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Switch = _ref => {\n  _s();\n\n  let {\n    onColor,\n    offColor,\n    onHandleColor,\n    offHandleColor,\n    value,\n    className,\n    checkedIcon = /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false),\n    uncheckedIcon = /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false),\n    errors = [],\n    onChange\n  } = _ref;\n  const [selected, setSelected] = React.useState(value);\n\n  const handleChange = val => {\n    setSelected(val);\n    onChange === null || onChange === void 0 ? void 0 : onChange(val);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(SwitchProvider, {\n      className: `${className}`,\n      checked: selected,\n      onChange: handleChange,\n      onColor: onColor,\n      offColor: offColor,\n      onHandleColor: onHandleColor,\n      offHandleColor: offHandleColor,\n      checkedIcon: checkedIcon,\n      uncheckedIcon: uncheckedIcon\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n      errors: errors\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Switch, \"KgnPjjEI7mNfr40I5e62ifoouAE=\");\n\n_c = Switch;\nSwitch.propTypes = {\n  onColor: PropTypes.string,\n  offColor: PropTypes.string,\n  onHandleColor: PropTypes.string,\n  offHandleColor: PropTypes.string,\n  value: PropTypes.bool,\n  className: PropTypes.string,\n  checkedIcon: PropTypes.node,\n  uncheckedIcon: PropTypes.node,\n  onChange: PropTypes.func\n};\nSwitch.defaultProps = {\n  value: false,\n  className: \"\",\n  onColor: \"#359766\",\n  offColor: \"#e3e4e8\",\n  onHandleColor: \"#ffffff\",\n  offHandleColor: \"#ffffff\",\n  checkedIcon: /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false),\n  onChange: () => {},\n  uncheckedIcon: /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n};\nexport { Switch };\n\nvar _c;\n\n$RefreshReg$(_c, \"Switch\");","map":{"version":3,"sources":["/Users/lamnguyen/Documents/HCMUS/Web advance/final project/template/banking/src/components/Switch/index.js"],"names":["ErrorMessage","React","SwitchProvider","PropTypes","Switch","onColor","offColor","onHandleColor","offHandleColor","value","className","checkedIcon","uncheckedIcon","errors","onChange","selected","setSelected","useState","handleChange","val","propTypes","string","bool","node","func","defaultProps"],"mappings":";;;AAAA,SAASA,YAAT,QAA6B,+BAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,uBAA3B;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;;AAEA,MAAMC,MAAM,GAAG,QAWT;AAAA;;AAAA,MAXU;AACdC,IAAAA,OADc;AAEdC,IAAAA,QAFc;AAGdC,IAAAA,aAHc;AAIdC,IAAAA,cAJc;AAKdC,IAAAA,KALc;AAMdC,IAAAA,SANc;AAOdC,IAAAA,WAAW,gBAAG,qCAPA;AAQdC,IAAAA,aAAa,gBAAG,qCARF;AASdC,IAAAA,MAAM,GAAG,EATK;AAUdC,IAAAA;AAVc,GAWV;AACJ,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0Bf,KAAK,CAACgB,QAAN,CAAeR,KAAf,CAAhC;;AACA,QAAMS,YAAY,GAAIC,GAAD,IAAS;AAC5BH,IAAAA,WAAW,CAACG,GAAD,CAAX;AACAL,IAAAA,QAAQ,SAAR,IAAAA,QAAQ,WAAR,YAAAA,QAAQ,CAAGK,GAAH,CAAR;AACD,GAHD;;AAIA,sBACE;AAAA,4BACE,QAAC,cAAD;AACE,MAAA,SAAS,EAAG,GAAET,SAAU,EAD1B;AAEE,MAAA,OAAO,EAAEK,QAFX;AAGE,MAAA,QAAQ,EAAEG,YAHZ;AAIE,MAAA,OAAO,EAAEb,OAJX;AAKE,MAAA,QAAQ,EAAEC,QALZ;AAME,MAAA,aAAa,EAAEC,aANjB;AAOE,MAAA,cAAc,EAAEC,cAPlB;AAQE,MAAA,WAAW,EAAEG,WARf;AASE,MAAA,aAAa,EAAEC;AATjB;AAAA;AAAA;AAAA;AAAA,YADF,eAYE,QAAC,YAAD;AAAc,MAAA,MAAM,EAAEC;AAAtB;AAAA;AAAA;AAAA;AAAA,YAZF;AAAA,kBADF;AAgBD,CAjCD;;GAAMT,M;;KAAAA,M;AAkCNA,MAAM,CAACgB,SAAP,GAAmB;AACjBf,EAAAA,OAAO,EAAEF,SAAS,CAACkB,MADF;AAEjBf,EAAAA,QAAQ,EAAEH,SAAS,CAACkB,MAFH;AAGjBd,EAAAA,aAAa,EAAEJ,SAAS,CAACkB,MAHR;AAIjBb,EAAAA,cAAc,EAAEL,SAAS,CAACkB,MAJT;AAKjBZ,EAAAA,KAAK,EAAEN,SAAS,CAACmB,IALA;AAMjBZ,EAAAA,SAAS,EAAEP,SAAS,CAACkB,MANJ;AAOjBV,EAAAA,WAAW,EAAER,SAAS,CAACoB,IAPN;AAQjBX,EAAAA,aAAa,EAAET,SAAS,CAACoB,IARR;AASjBT,EAAAA,QAAQ,EAAEX,SAAS,CAACqB;AATH,CAAnB;AAWApB,MAAM,CAACqB,YAAP,GAAsB;AACpBhB,EAAAA,KAAK,EAAE,KADa;AAEpBC,EAAAA,SAAS,EAAE,EAFS;AAGpBL,EAAAA,OAAO,EAAE,SAHW;AAIpBC,EAAAA,QAAQ,EAAE,SAJU;AAKpBC,EAAAA,aAAa,EAAE,SALK;AAMpBC,EAAAA,cAAc,EAAE,SANI;AAOpBG,EAAAA,WAAW,eAAE,qCAPO;AAQpBG,EAAAA,QAAQ,EAAE,MAAM,CAAE,CARE;AASpBF,EAAAA,aAAa,eAAE;AATK,CAAtB;AAYA,SAASR,MAAT","sourcesContent":["import { ErrorMessage } from \"../../components/ErrorMessage\";\nimport React from \"react\";\nimport SwitchProvider from \"@dhiwise/react-switch\";\nimport PropTypes from \"prop-types\";\n\nconst Switch = ({\n  onColor,\n  offColor,\n  onHandleColor,\n  offHandleColor,\n  value,\n  className,\n  checkedIcon = <></>,\n  uncheckedIcon = <></>,\n  errors = [],\n  onChange,\n}) => {\n  const [selected, setSelected] = React.useState(value);\n  const handleChange = (val) => {\n    setSelected(val);\n    onChange?.(val);\n  };\n  return (\n    <>\n      <SwitchProvider\n        className={`${className}`}\n        checked={selected}\n        onChange={handleChange}\n        onColor={onColor}\n        offColor={offColor}\n        onHandleColor={onHandleColor}\n        offHandleColor={offHandleColor}\n        checkedIcon={checkedIcon}\n        uncheckedIcon={uncheckedIcon}\n      />\n      <ErrorMessage errors={errors} />\n    </>\n  );\n};\nSwitch.propTypes = {\n  onColor: PropTypes.string,\n  offColor: PropTypes.string,\n  onHandleColor: PropTypes.string,\n  offHandleColor: PropTypes.string,\n  value: PropTypes.bool,\n  className: PropTypes.string,\n  checkedIcon: PropTypes.node,\n  uncheckedIcon: PropTypes.node,\n  onChange: PropTypes.func,\n};\nSwitch.defaultProps = {\n  value: false,\n  className: \"\",\n  onColor: \"#359766\",\n  offColor: \"#e3e4e8\",\n  onHandleColor: \"#ffffff\",\n  offHandleColor: \"#ffffff\",\n  checkedIcon: <></>,\n  onChange: () => {},\n  uncheckedIcon: <></>,\n};\n\nexport { Switch };\n"]},"metadata":{},"sourceType":"module"}